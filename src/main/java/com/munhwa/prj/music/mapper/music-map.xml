<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.munhwa.prj.music.mapper.MusicMapper">
	<resultMap type="com.munhwa.prj.music.vo.MusicVO" id="musicResultMap">
		<id property="id" column="ID" />
		<result property="artName" column="ART_NAME"/>
		<result property="genre" column="GENRE"/>
		<result property="lyric" column="LYRIC"/>
		<result property="likeIt" column="LIKE_IT"/>
		<result property="fileId" column="FILE_ID"/>
		<result property="title" column="TITLE"/>
		<result property="price" column="PRICE"/>
		<result property="albumId" column="ALBUM_ID"/>
		<result property="time" column="TIME"/>
		<result property="writer" column="WRITER"/>
		<result property="composing" column="COMPOSING"/>
		<result property="arrangement" column="ARRANGEMENT"/>
		<result property="picture" column="PICTURE"/>
	</resultMap>

	<select id="musicSelectList" resultMap="musicResultMap">
		SELECT *
		FROM MUSIC
		ORDER BY LIKE_IT DESC
	</select>
	
	<select id="musicSelectListByGenre" parameterType="String" resultMap="musicResultMap">
		SELECT *
		FROM MUSIC
		WHERE GENRE = #{genre}
		ORDER BY LIKE_IT DESC
	</select>
	
	<select id="musicPersonalList" resultMap="musicResultMap">
		<![CDATA[
		SELECT id, picture, title, art_name, like_it
		from (SELECT 
        	rownum as rn,
        	id, picture, title, art_name, like_it
			FROM MUSIC
			WHERE GENRE=(SELECT GENRE
						FROM MEMBER
						WHERE ID=#{id})
			ORDER BY LIKE_IT DESC)
	        where rn> (#{cri.pageNum}-1) * #{cri.amount}
	        and rn <= #{cri.pageNum} * #{cri.amount}
 		]]>
	</select>
	
	<select id="getCountByList" resultType="int">
	  <![CDATA[
	      select count(id)
	      from music
	      where id < #{id}
      ]]>
	</select>
	<select id="musicSelectByTitle" parameterType="String" resultType="com.munhwa.prj.music.vo.SearchVO">
		SELECT m.ID as musicId, m.TITLE as musicTitle, m.ART_NAME as musicArtistName, m.FILE_ID as musicMp3, a.PICTURE as musicImage
			   a.ID as albumId, a.ALB_NAME as albumTitle, a.ART_NAME as albumArtistName, a.PICTURE as albumImage
		FROM MUSIC m 
		JOIN ALBUM a 
		ON(m.ALBUM_ID = a.ID)
		WHERE UPPER(TITLE) LIKE UPPER('%'||#{title}||'%') 
	</select>
	
	<select id="musicSelectByAlBum" parameterType="int" resultMap="musicResultMap">
		SELECT *
		FROM MUSIC m 
		WHERE ALBUM_ID = #{id}
		ORDER BY LIKE_IT DESC
	</select>
	
	<select id="musicSelectListByPurchase" parameterType="String" resultMap="musicResultMap">
		SELECT *
		FROM MUSIC
		WHERE ID IN (SELECT MUSIC_ID
                     FROM PURCHASED_MUSIC
                     WHERE MEMBER_ID = #{id})
	</select>
	
	<select id="musicSelectListByWishList" parameterType="int" resultMap="musicResultMap">
		SELECT * FROM MUSIC
		WHERE ID IN (SELECT MUSIC_ID
        			 FROM WISHLIST_MUSIC
        			 WHERE WISHLIST_ID=#{id})
	</select>
	
	<select id="musicSelectListByMusicId" parameterType="map" resultMap="musicResultMap">
		SELECT * FROM MUSIC
		WHERE ID IN 
		<foreach item="item" index="index" collection="musicIdList" open="(" separator="," close=")">
        	#{item}
  		</foreach>
	</select>
	
	<select id="musicSelect" parameterType="int" resultMap="musicResultMap">
		SELECT *
		FROM MUSIC
		WHERE ID = #{id}
	</select>
	
	<select id="musicSelectByArtName" parameterType="String" resultMap="musicResultMap">
		SELECT *
		FROM MUSIC
		WHERE TITLE = #{title}
		AND ART_NAME= #{artName}
	</select>
	
	<select id="musicIdByTitle" parameterType="com.munhwa.prj.music.vo.MusicVO" resultType="int">
		SELECT ID
		FROM MUSIC
		WHERE TITLE = #{title}
		AND ART_NAME = #{artName)
	</select>
	
	<update id="updateLike" statementType = "CALLABLE" parameterType="map" >
		<![CDATA[
			{ call updatelike (
			#{v_member_id, mode=IN, jdbcType=VARCHAR, javaType=string},
			#{v_music_id, mode=IN, jdbcType=INTEGER, javaType=int},
			#{p_result, mode=OUT, jdbcType=INTEGER, javaType=int}
			)}
		]]>
	</update>
	
</mapper>