<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.munhwa.prj.member.mapper.MemberMapper">

  <resultMap type="com.munhwa.prj.member.vo.MemberVO" id="memberResultMap">
    <id property="id" column="id"/>
    <result property="password" column="password"/>
    <result property="nickname" column="nickname"/>
    <result property="tel" column="tel"/>
    <result property="mileage" column="mileage"/>
    <result property="genre" column="genre"/>
    <result property="sname" column="sname"/>
    <result property="oname" column="oname"/>
    <result property="pwChanged" column="pw_changed"/>
  </resultMap>

  <!-- 마이페이지 회원정보 -->
  <select id="selectByMemberId" resultMap="memberResultMap">
    SELECT id,
           password,
           nickname,
           tel,
           genre,
           role,
           mileage,
           oname,
           sname,
           pw_changed
    FROM member
    WHERE id = #{username}
  </select>

  <!-- 개인정보 업데이트 -->
  <update id="updateInfo" parameterType="com.munhwa.prj.member.vo.MemberVO">
    UPDATE member
    SET tel   = #{tel},
        genre = #{genre}
    WHERE id = #{id}
  </update>

  <!-- 프로필 업데이트 (사진, 닉네임) -->
  <update id="updateProfile" parameterType="com.munhwa.prj.member.vo.MemberVO">
    UPDATE MEMBER
    <set>
      ONAME = #{oname},
      SNAME = #{sname},
      <if test="nickname != null">
        NICKNAME = #{nickname},
      </if>
    </set>
    WHERE ID = #{id}
  </update>

  <!-- 비밀번호 업데이트 -->
  <update id="updatePassword" parameterType="com.munhwa.prj.member.vo.MemberVO">
    UPDATE member
    SET password   = #{password},
        pw_changed = 0
    WHERE id = #{id}
  </update>

  <update id="updatePassword2" parameterType="com.munhwa.prj.member.vo.MemberVO">
    UPDATE member
    SET password   = #{password},
        pw_changed = 1
    WHERE id = #{id}
  </update>

  <!-- 회원탈퇴 -->
  <delete id="deleteMember" parameterType="com.munhwa.prj.member.vo.MemberVO">
    DELETE
    FROM member
    WHERE id = #{id}
  </delete>

  <!-- 회원가입 -->
  <insert id="insertMember" parameterType="com.munhwa.prj.member.vo.MemberVO">
    INSERT INTO member (id, password, nickname, tel, genre, mileage, role)
    VALUES (#{id}, #{password}, #{nickname}, #{tel}, #{genre}, 0, #{role})
  </insert>

  <!-- 소셜 로그인 시 회원가입 처리 -->
  <insert id="insertMemberByProc" statementType="CALLABLE" parameterType="map">
	<![CDATA[
    { call saveMember(
      #{v_id, mode=IN, jdbcType=VARCHAR, javaType=string},
      #{v_password, mode=IN, jdbcType=VARCHAR, javaType=string},
      #{v_nickname, mode=IN, jdbcType=VARCHAR, javaType=string},
      #{v_tel, mode=IN, jdbcType=VARCHAR, javaType=string},
      #{v_genre, mode=IN, jdbcType=VARCHAR, javaType=string},
      #{v_image, mode=IN, jdbcType=VARCHAR, javaType=string}
      )}
    ]]>
	</insert>

  <!-- 아이디 중복체크 -->
  <select id="chkId" parameterType="string" resultType="int">
    SELECT COUNT(*)
    FROM member
    WHERE id = #{id}
  </select>
  <!-- 닉네임 중복체크 -->
  <select id="chkNick" parameterType="string" resultType="int">
    SELECT COUNT(*)
    FROM member
    WHERE nickname = #{nickname}
  </select>

  <!-- 마일리지 충전 22/04/04 류기태-->
  <update id="plusMileage" parameterType="com.munhwa.prj.member.vo.MemberVO">
    UPDATE member
    SET mileage = mileage + #{mileage}
    WHERE id = #{id}
  </update>

  <!-- 마일리지 차감 22/04/04 류기태 -->
  <update id="minusMileage" parameterType="com.munhwa.prj.member.vo.MemberVO">
    UPDATE member
    SET mileage = mileage - #{mileage}
    WHERE id = #{id}
  </update>

  <!-- 아티스트 음원 수익 22/04/08 류기태 -->
  <update id="updateMileageMusic" parameterType="map" statementType="CALLABLE">
	<![CDATA[
    { call mileage_usage_music(
      #{v_member_id, mode=IN, jdbcType=VARCHAR, javaType=string},
      #{v_mileage, mode=IN, jdbcType=INTEGER, javaType=int},
      #{v_title, mode=IN, jdbcType=VARCHAR, javaType=string}
      )}
    ]]>
	</update>

  <!-- 공연 판매 마일리지 업데이트 및 수익내역 찍기 22/04/15 류기태 추가수정 -->
  <update id="updateMileagePerformance" parameterType="map" statementType="CALLABLE">
	<![CDATA[
    { call mileage_usage_performance(
      #{v_member_id, mode=IN, jdbcType=VARCHAR, javaType=string},
      #{v_mileage, mode=IN, jdbcType=INTEGER, javaType=int},
      #{v_ticket_list_id, mode=IN, jdbcType=INTEGER, javaType=int},
      #{v_profit_at, mode=IN, jdbcType=DATE, javaType=date},
      #{v_artist_id, mode=IN, jdbcType=INTEGER, javaType=int},
      #{v_name, mode=IN, jdbcType=VARCHAR, javaType=string}
      )}
    ]]>
	</update>

  <!-- 아이디 찾기 (계정 리스트) -->
  <select id="findIdList" resultMap="memberResultMap">
    SELECT REPLACE(id, SUBSTR(id, 1, 3), '***') AS id
    FROM member
    WHERE tel = #{tel}
  </select>
</mapper>
