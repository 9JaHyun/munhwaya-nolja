<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.munhwa.prj.post.mapper.CommentMapper">
  <resultMap type="com.munhwa.prj.post.vo.CommentVO" id="commentMap">
    <id property="id" column="id"/>
    <result property="content" column="content"/>
    <result property="groupId" column="group_id"/>
    <result property="postId" column="post_id"/>
    <result property="memberId" column="member_id"/>
    <result property="createdAt" column="created_at"/>
    <result property="updatedAt" column="updated_at"/>
  </resultMap>

  <resultMap type="com.munhwa.prj.post.vo.CommentShowVO" id="commentShowMap">
    <id property="id" column="id"/>
    <result property="content" column="content"/>
    <result property="groupId" column="group_id"/>
    <result property="postId" column="post_id"/>
    <result property="memberId" column="member_id"/>
    <result property="writer" column="writer"/>
    <result property="writerProfile" column="profile"/>
    <result property="createdAt" column="created_at"/>
    <result property="updatedAt" column="updated_at"/>
    <result property="groupOrder" column="group_order"/>
  </resultMap>

  <insert id="insertComment">
    INSERT INTO comments (id, content, created_at, post_id, member_id, group_id, group_order)
    VALUES (comments_seq.nextval, #{content}, #{createdAt}, #{postId}, #{memberId}
    <choose>
      <when test="groupId != 0">
        ,#{groupId}, (select NVL2(max(group_order), max(group_order) + 1, 1)
        from comments
        where post_id = #{postId}
        and group_id = #{groupId}))
      </when>
      <otherwise>
        ,(select NVL2(max(group_id), max(group_id) + 1, 1)
        from comments
        where post_id = #{postId}), 1)
      </otherwise>
    </choose>
  </insert>

  <update id="updateComment">
    UPDATE comments
    SET content    = #{content},
        updated_at = #{updatedAt}
    WHERE id = #{id}
  </update>

  <update id="deleteCommentById" statementType="CALLABLE" parameterType="map">
	<![CDATA[
    { call delete_comment_proc(
      #{v_comment_id, mode=IN,jdbcType=INTEGER, javaType=int},
      #{v_result, mode=OUT, jdbcType=INTEGER, javaType=int}
      )}
    ]]>
	</update>

  <select id="selectListByPostId" resultMap="commentShowMap">
    SELECT c.*,
           m.sname    AS profile,
           m.nickname AS writer
    FROM comments c,
         member m
    WHERE post_id = #{postId}
      AND c.member_id = m.id
    ORDER BY c.group_id, c.group_order
  </select>
</mapper>